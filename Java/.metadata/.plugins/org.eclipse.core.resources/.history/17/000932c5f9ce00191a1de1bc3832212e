package cass.oli.mandelbrot;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.MouseEvent;

import javax.swing.JFrame;
import javax.swing.event.MouseInputAdapter;

public class Mandelbrot_Window {

	public static void main(String[] args) {
		new Mandelbrot_Window("Boids", new Mandelbrot());
	}
	
	public Mandelbrot_Window(String title, Mandelbrot man) {
		JFrame frame = new JFrame(title);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.addComponentListener(new ComponentAdapter() 
		{  
	        public void componentResized(ComponentEvent evt) {
	            man.resize();
	        }
	});
		
		Mouse mouse = new Mouse(man);
		man.addMouseListener(mouse);
		man.addMouseMotionListener(mouse);
		
		frame.add(man);
		frame.pack();
		frame.setResizable(true);
		frame.setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
		frame.setVisible(true);
		man.run();
	}

}

class Mouse extends MouseInputAdapter {
	Mandelbrot man;
	public void mouseClicked(MouseEvent me) {
		if(me.getButton() == MouseEvent.BUTTON1) {
			man.leftClick(me.getX(), me.getY());
		}
		if(me.getButton() == MouseEvent.BUTTON3) {
			man.rightClick(me.getX(), me.getY());
		}
	}
	public void mouseDragged(MouseEvent me) {
		
	}
	
	public void mouseMoved(MouseEvent e) {
		
	}
	
	public Mouse(Mandelbrot man) {
		this.man = man;
	}

}
